{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","components/TodoTable.js","components/Calendar.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","className","onSubmit","e","preventDefault","id","text","type","placeholder","value","name","onChange","target","Todo","todos","completeTodo","removeTodo","map","todo","index","isComplete","onClick","TodoList","dateProp","searchStorage","date","storage","JSON","parse","localStorage","getItem","toLocaleDateString","dateState","setDate","setTodos","max","item","lookMaxId","idCount","setId","aDate","dateArr","split","parseInt","todayDate","Date","i","isPast","weekday","test","newTodos","setItem","stringify","updatedTodos","removeArr","filter","length","removeItem","TodoTable","setToggle","dateObj","setDateObj","dateArray","getDaysArray","arrOfDates","auxDate","getTime","getDate","push","useEffect","prevDay","nextDay","Calendar","setTimeout","window","dispatchEvent","Event","events","obj","eventArray","reverse","join","title","breakWord","getEventsArray","archive","keys","Object","allStorage","plugins","dayGridPlugin","initialView","eventBorderColor","eventBackgroundColor","eventColor","fixedWeekCount","height","dayMaxEvents","customButtons","return","click","headerToolbar","left","center","right","App","toggle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d47df36.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction TodoForm(props) {\n    const [input, setInput] = useState(\"\");\n\n    const handleChange = (e) => {\n        setInput(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.onSubmit({\n            id: props.id,\n            text: input,\n        });\n\n        setInput(\"\");\n    };\n\n    return (\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                placeholder=\"Add a todo\"\n                value={input}\n                name=\"text\"\n                className=\"todo-input\"\n                onChange={handleChange}\n            ></input>\n            <button className=\"todo-button\">+</button>\n        </form>\n    );\n}\n\nexport default TodoForm;\n","import React from \"react\";\nimport { BsTrash } from \"react-icons/bs\";\n\nfunction Todo({ todos, completeTodo, removeTodo }) {\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\n      key={index}\n    >\n      <div className=\"todo-text\" onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className=\"icons\">\n        <BsTrash\n          className=\"delete-icon\"\n          onClick={() => removeTodo(todo.id)}\n        />\n      </div>\n    </div>\n  ));\n}\n\nexport default Todo;\n","import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\n\nfunction TodoList({ dateProp }) {\n  const searchStorage = (date) => {\n    let storage = JSON.parse(\n      localStorage.getItem(date.toLocaleDateString(\"es-ES\"))\n    );\n    if (storage) return storage;\n    return [];\n  };\n\n  const lookMaxId = (date) => {\n    let storage = JSON.parse(\n      localStorage.getItem(date.toLocaleDateString(\"es-ES\"))\n    );\n    if (!storage) return 0;\n    let max = -1;\n    for (let item of storage) {\n      if (item.id > max) max = item.id;\n    }\n    return max + 1;\n  };\n\n  const [dateState, setDate] = useState(dateProp);\n  const [todos, setTodos] = useState(searchStorage(dateState));\n  const [idCount, setId] = useState(lookMaxId(dateProp));\n\n  if (dateState !== dateProp) {\n    setTodos(searchStorage(dateProp));\n    setDate(dateProp);\n  }\n\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) return;\n    const newTodos = [...todos, todo];\n    localStorage.setItem(\n      dateState.toLocaleDateString(\"es-ES\"),\n      JSON.stringify(newTodos)\n    );\n    setTodos(newTodos);\n    setId(idCount + 1);\n  };\n\n  const removeTodo = (id) => {\n    let removeArr = [...todos].filter((todo) => todo.id !== id);\n    localStorage.setItem(\n      dateState.toLocaleDateString(\"es-ES\"),\n      JSON.stringify(removeArr)\n    );\n\n    if (!removeArr.length)\n      localStorage.removeItem(dateState.toLocaleDateString(\"es-ES\"));\n    setTodos(removeArr);\n  };\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    localStorage.setItem(\n      dateState.toLocaleDateString(\"es-ES\"),\n      JSON.stringify(updatedTodos)\n    );\n    setTodos(updatedTodos);\n  };\n\n  const isPast = (aDate) => {\n    let dateArr = aDate.split(\"/\").map((item) => parseInt(item));\n    let todayDate = new Date()\n      .toLocaleDateString(\"es-ES\")\n      .split(\"/\")\n      .map((item) => parseInt(item));\n\n    if (dateArr[0] === todayDate[0]) return false;\n\n    for (let i = 2; i >= 0; i--) {\n      if (todayDate[i] < dateArr[i]) return false;\n    }\n\n    return true;\n  };\n\n  return (\n    <div\n      id=\"day-container\"\n      className={isPast(dateState.toLocaleDateString(\"es-ES\")) ? \"past\" : \"\"}\n    >\n      <h1>\n        {dateState.toLocaleDateString(\"en-US\",{weekday:\"long\"})}\n      </h1>\n      <h2>{dateState.toLocaleDateString()}</h2>\n      <TodoForm onSubmit={addTodo} id={idCount} />\n      <div id=\"todo-container\">\n        <Todo\n          todos={todos}\n          completeTodo={completeTodo}\n          removeTodo={removeTodo}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React, { useState, useEffect } from \"react\";\nimport { BsChevronLeft } from \"react-icons/bs\";\nimport { BsChevronRight } from \"react-icons/bs\";\nimport { AiOutlineCalendar } from \"react-icons/ai\";\nimport TodoList from \"./TodoList\";\n\nfunction TodoTable({ setToggle }) {\n  const [dateObj, setDateObj] = useState(new Date());\n\n  let dateArray = getDaysArray();\n\n  useEffect(() => {\n    getDaysArray();\n  });\n\n  function getDaysArray() {\n    let arrOfDates = [];\n    let auxDate = new Date(dateObj.getTime());\n    auxDate.setDate(auxDate.getDate() - 1);\n    for (let i = 0; i < 4; i++) {\n      arrOfDates.push(new Date(auxDate.getTime()));\n      auxDate.setDate(auxDate.getDate() + 1);\n    }\n    return arrOfDates;\n  }\n\n  function nextDay() {\n    let auxDate = new Date(dateObj.getTime());\n    auxDate.setDate(auxDate.getDate() + 1);\n    setDateObj(auxDate);\n  }\n\n  function prevDay() {\n    let auxDate = new Date(dateObj.getTime());\n    auxDate.setDate(auxDate.getDate() - 1);\n    setDateObj(auxDate);\n  }\n\n  return (\n    <main id=\"main-container\">\n      <nav className=\"nav\">\n        <button className=\"btn prev\" onClick={() => prevDay()}>\n          {<BsChevronLeft />}\n        </button>\n        <button\n          className=\"btn calendar\"\n          onClick={() => setToggle(false)}\n        >\n          {<AiOutlineCalendar />}\n        </button>\n        <button className=\"btn next\" onClick={() => nextDay()}>\n          {<BsChevronRight />}\n        </button>\n      </nav>\n      <div id=\"todo-app\">\n        <TodoList dateProp={dateArray[0]}></TodoList>\n        <TodoList dateProp={dateArray[1]}></TodoList>\n        <TodoList dateProp={dateArray[2]}></TodoList>\n        <TodoList dateProp={dateArray[3]}></TodoList>\n      </div>\n    </main>\n  );\n}\n\nexport default TodoTable;\n","import React, { useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport { AiOutlineEdit } from \"react-icons/ai\";\n\nfunction Calendar({ setToggle }) {\n    function allStorage() {\n        let archive = {},\n            keys = Object.keys(localStorage),\n            i = keys.length;\n\n        while (i--) {\n            archive[keys[i]] = localStorage.getItem(keys[i]);\n        }\n\n        return archive;\n    }\n\n    function getEventsArray(obj) {\n        let eventArray = [];\n        for (let item in obj) {\n            let todos = JSON.parse(obj[item]);\n            let date = item\n                .split(\"/\")\n                .reverse()\n                .map((i) => (i.length < 2 ? \"0\" + i : i))\n                .join(\"-\");\n\n            for (let todo of todos) {\n                eventArray.push({\n                    date,\n                    title: todo.text,\n                    breakWord: \"break-word\",\n                });\n            }\n        }\n        return eventArray;\n    }\n\n    useEffect(() => {\n        setTimeout(function () {\n            window.dispatchEvent(new Event(\"resize\"));\n        }, 1);\n    });\n\n    let storageArray = allStorage();\n    let events = getEventsArray(storageArray);\n\n    return (\n        <div id=\"calendar\">\n            <FullCalendar\n                plugins={[dayGridPlugin]}\n                initialView={\"dayGridMonth\"}\n                events={events}\n                eventBorderColor={\"gray\"}\n                eventBackgroundColor={\"#202020\"}\n                eventColor={\"white\"}\n                fixedWeekCount={false}\n                height={\"98vh\"}\n                dayMaxEvents={true}\n                customButtons={{\n                    return: {\n                        text: <AiOutlineEdit />,\n                        click: () => setToggle(true),\n                    },\n                }}\n                headerToolbar={{\n                    left: \"prev\",\n                    center: \"title,return\",\n                    right: \"next\",\n                }}\n            />\n        </div>\n    );\n}\n\nexport default Calendar;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport TodoTable from \"./components/TodoTable\";\nimport Calendar from \"./components/Calendar.js\";\n\nfunction App() {\n    const [toggle, setToggle] = useState(true);\n    if (toggle) {\n        return <TodoTable setToggle={setToggle} />;\n    } else {\n        return <Calendar setToggle={setToggle} />;\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}