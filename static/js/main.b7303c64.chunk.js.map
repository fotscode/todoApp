{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","components/TodoTable.js","components/Calendar.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","className","onSubmit","e","preventDefault","id","text","type","placeholder","value","name","onChange","target","Todo","todos","completeTodo","removeTodo","map","todo","index","isComplete","onClick","TodoList","dateProp","searchStorage","date","storage","JSON","parse","localStorage","getItem","toLocaleDateString","dateState","setDate","setTodos","max","item","lookMaxId","idCount","setId","aDate","dateArr","split","parseInt","todayDate","Date","i","isPast","weekday","test","newTodos","setItem","stringify","updatedTodos","removeArr","filter","length","removeItem","TodoTable","setToggle","dateObj","setDateObj","dateArray","getDaysArray","arrOfDates","auxDate","getTime","getDate","push","useEffect","class","prevDay","nextDay","Calendar","setTimeout","window","dispatchEvent","Event","events","obj","eventArray","reverse","join","title","breakWord","getEventsArray","archive","keys","Object","allStorage","plugins","dayGridPlugin","initialView","eventBorderColor","eventBackgroundColor","eventColor","fixedWeekCount","height","dayMaxEvents","customButtons","return","click","headerToolbar","left","center","right","App","toggle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7303c64.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.onSubmit({\r\n            id: props.id,\r\n            text: input,\r\n        });\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Add a todo\"\r\n                value={input}\r\n                name=\"text\"\r\n                className=\"todo-input\"\r\n                onChange={handleChange}\r\n            ></input>\r\n            <button className=\"todo-button\">+</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React from \"react\";\r\nimport { BsTrash } from \"react-icons/bs\";\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo }) {\r\n    return todos.map((todo, index) => (\r\n        <div\r\n            className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\r\n            key={index}\r\n        >\r\n            <div className=\"todo-text\" onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <BsTrash\r\n                    className=\"delete-icon\"\r\n                    onClick={() => removeTodo(todo.id)}\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList({ dateProp }) {\r\n\tconst searchStorage = (date) => {\r\n\t\tlet storage = JSON.parse(\r\n\t\t\tlocalStorage.getItem(date.toLocaleDateString())\r\n\t\t);\r\n\t\tif (storage) return storage;\r\n\t\treturn [];\r\n\t};\r\n\r\n\tconst lookMaxId = (date) => {\r\n\t\tlet storage = JSON.parse(\r\n\t\t\tlocalStorage.getItem(date.toLocaleDateString())\r\n\t\t);\r\n\t\tif (!storage) return 0;\r\n\t\tlet max = -1;\r\n\t\tfor (let item of storage) {\r\n\t\t\tif (item.id > max) max = item.id;\r\n\t\t}\r\n\t\treturn max + 1;\r\n\t};\r\n\r\n\tconst [dateState, setDate] = useState(dateProp);\r\n\tconst [todos, setTodos] = useState(searchStorage(dateState));\r\n\tconst [idCount, setId] = useState(lookMaxId(dateProp));\r\n\r\n\tif (dateState !== dateProp) {\r\n\t\tsetTodos(searchStorage(dateProp));\r\n\t\tsetDate(dateProp);\r\n\t}\r\n\r\n\tconst addTodo = (todo) => {\r\n\t\tif (!todo.text || /^\\s*$/.test(todo.text)) return;\r\n\t\tconst newTodos = [...todos, todo];\r\n\t\tlocalStorage.setItem(\r\n\t\t\tdateState.toLocaleDateString(),\r\n\t\t\tJSON.stringify(newTodos)\r\n\t\t);\r\n\t\tsetTodos(newTodos);\r\n\t\tsetId(idCount + 1);\r\n\t};\r\n\r\n\tconst removeTodo = (id) => {\r\n\t\tlet removeArr = [...todos].filter((todo) => todo.id !== id);\r\n\t\tlocalStorage.setItem(\r\n\t\t\tdateState.toLocaleDateString(),\r\n\t\t\tJSON.stringify(removeArr)\r\n\t\t);\r\n\r\n\t\tif (!removeArr.length)\r\n\t\t\tlocalStorage.removeItem(dateState.toLocaleDateString());\r\n\t\tsetTodos(removeArr);\r\n\t};\r\n\r\n\tconst completeTodo = (id) => {\r\n\t\tlet updatedTodos = todos.map((todo) => {\r\n\t\t\tif (todo.id === id) {\r\n\t\t\t\ttodo.isComplete = !todo.isComplete;\r\n\t\t\t}\r\n\t\t\treturn todo;\r\n\t\t});\r\n\t\tlocalStorage.setItem(\r\n\t\t\tdateState.toLocaleDateString(),\r\n\t\t\tJSON.stringify(updatedTodos)\r\n\t\t);\r\n\t\tsetTodos(updatedTodos);\r\n\t};\r\n\r\n\tconst isPast = (aDate) => {\r\n\t\tlet dateArr = aDate.split(\"/\").map((item) => parseInt(item));\r\n\t\tlet todayDate = new Date()\r\n\t\t\t.toLocaleDateString()\r\n\t\t\t.split(\"/\")\r\n\t\t\t.map((item) => parseInt(item));\r\n\r\n\t\tif (dateArr[0] === todayDate[0]) return false;\r\n\r\n\t\tfor (let i = 2; i >= 0; i--) {\r\n\t\t\tif (todayDate[i] < dateArr[i]) return false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tid=\"day-container\"\r\n\t\t\tclassName={isPast(dateState.toLocaleDateString()) ? \"past\" : \"\"}\r\n\t\t>\r\n\t\t\t<h1>\r\n\t\t\t\t{dateState.toLocaleDateString(\"en-US\", { weekday: \"long\" })}\r\n\t\t\t</h1>\r\n\t\t\t<h2>{dateState.toLocaleDateString()}</h2>\r\n\t\t\t<TodoForm onSubmit={addTodo} id={idCount} />\r\n\t\t\t<div id=\"todo-container\">\r\n\t\t\t\t<Todo\r\n\t\t\t\t\ttodos={todos}\r\n\t\t\t\t\tcompleteTodo={completeTodo}\r\n\t\t\t\t\tremoveTodo={removeTodo}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BsChevronLeft } from \"react-icons/bs\";\r\nimport { BsChevronRight } from \"react-icons/bs\";\r\nimport { AiOutlineCalendar } from \"react-icons/ai\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nfunction TodoTable({ setToggle }) {\r\n    const [dateObj, setDateObj] = useState(new Date());\r\n\r\n    let dateArray = getDaysArray();\r\n\r\n    useEffect(() => {\r\n        getDaysArray();\r\n    });\r\n\r\n    function getDaysArray() {\r\n        let arrOfDates = [];\r\n        let auxDate = new Date(dateObj.getTime());\r\n        auxDate.setDate(auxDate.getDate() - 1);\r\n        for (let i = 0; i < 4; i++) {\r\n            arrOfDates.push(new Date(auxDate.getTime()));\r\n            auxDate.setDate(auxDate.getDate() + 1);\r\n        }\r\n        return arrOfDates;\r\n    }\r\n\r\n    function nextDay() {\r\n        let auxDate = new Date(dateObj.getTime());\r\n        auxDate.setDate(auxDate.getDate() + 1);\r\n        setDateObj(auxDate);\r\n    }\r\n\r\n    function prevDay() {\r\n        let auxDate = new Date(dateObj.getTime());\r\n        auxDate.setDate(auxDate.getDate() - 1);\r\n        setDateObj(auxDate);\r\n    }\r\n\r\n    return (\r\n        <main id=\"main-container\">\r\n            <nav class=\"nav\">\r\n                <button className=\"btn prev\" onClick={() => prevDay()}>\r\n                    {<BsChevronLeft />}\r\n                </button>\r\n                <button\r\n                    className=\"btn calendar\"\r\n                    onClick={() => setToggle(false)}\r\n                >\r\n                    {<AiOutlineCalendar />}\r\n                </button>\r\n                <button className=\"btn next\" onClick={() => nextDay()}>\r\n                    {<BsChevronRight />}\r\n                </button>\r\n            </nav>\r\n            <div id=\"todo-app\">\r\n                <TodoList dateProp={dateArray[0]}></TodoList>\r\n                <TodoList dateProp={dateArray[1]}></TodoList>\r\n                <TodoList dateProp={dateArray[2]}></TodoList>\r\n                <TodoList dateProp={dateArray[3]}></TodoList>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default TodoTable;\r\n","import React, { useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport { AiOutlineEdit } from \"react-icons/ai\";\r\n\r\nfunction Calendar({ setToggle }) {\r\n    function allStorage() {\r\n        let archive = {},\r\n            keys = Object.keys(localStorage),\r\n            i = keys.length;\r\n\r\n        while (i--) {\r\n            archive[keys[i]] = localStorage.getItem(keys[i]);\r\n        }\r\n\r\n        return archive;\r\n    }\r\n\r\n    function getEventsArray(obj) {\r\n        let eventArray = [];\r\n        for (let item in obj) {\r\n            let todos = JSON.parse(obj[item]);\r\n            let date = item\r\n                .split(\"/\")\r\n                .reverse()\r\n                .map((i) => (i.length < 2 ? \"0\" + i : i))\r\n                .join(\"-\");\r\n\r\n            for (let todo of todos) {\r\n                eventArray.push({\r\n                    date,\r\n                    title: todo.text,\r\n                    breakWord: \"break-word\",\r\n                });\r\n            }\r\n        }\r\n        return eventArray;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(function () {\r\n            window.dispatchEvent(new Event(\"resize\"));\r\n        }, 1);\r\n    });\r\n\r\n    let storageArray = allStorage();\r\n    let events = getEventsArray(storageArray);\r\n\r\n    return (\r\n        <div id=\"calendar\">\r\n            <FullCalendar\r\n                plugins={[dayGridPlugin]}\r\n                initialView={\"dayGridMonth\"}\r\n                events={events}\r\n                eventBorderColor={\"gray\"}\r\n                eventBackgroundColor={\"#202020\"}\r\n                eventColor={\"white\"}\r\n                fixedWeekCount={false}\r\n                height={\"98vh\"}\r\n                dayMaxEvents={true}\r\n                customButtons={{\r\n                    return: {\r\n                        text: <AiOutlineEdit />,\r\n                        click: () => setToggle(true),\r\n                    },\r\n                }}\r\n                headerToolbar={{\r\n                    left: \"prev\",\r\n                    center: \"title,return\",\r\n                    right: \"next\",\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calendar;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport TodoTable from \"./components/TodoTable\";\nimport Calendar from \"./components/Calendar.js\";\n\nfunction App() {\n    const [toggle, setToggle] = useState(true);\n    if (toggle) {\n        return <TodoTable setToggle={setToggle} />;\n    } else {\n        return <Calendar setToggle={setToggle} />;\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}